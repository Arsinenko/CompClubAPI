// <auto-generated />
using System;
using CompClubAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompClubAPI.Migrations
{
    [DbContext(typeof(CollegeTaskV2Context))]
    [Migration("20250217091723_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompClubAPI.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Balance")
                        .HasColumnType("money")
                        .HasColumnName("balance");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("id_client");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime")
                        .HasColumnName("last_login");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("login");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("binary(64)")
                        .HasColumnName("password")
                        .IsFixedLength();

                    b.Property<DateTime?>("PasswordChangedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("password_changed_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Account__3213E83FAAA4239E");

                    b.HasIndex(new[] { "IdClient" }, "IX_Account_id_client");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.BalanceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("PreviousBalance")
                        .HasColumnType("money")
                        .HasColumnName("previous_balance");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("PK__BalanceH__3213E83FB261A664");

                    b.HasIndex("AccountId");

                    b.ToTable("BalanceHistory", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time");

                    b.Property<int?>("IdPaymentMethod")
                        .HasColumnType("int")
                        .HasColumnName("id_payment_method");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int")
                        .HasColumnName("id_status");

                    b.Property<int>("IdWorkingSpace")
                        .HasColumnType("int")
                        .HasColumnName("id_working_space");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("money")
                        .HasColumnName("total_cost");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Booking__3213E83F0889DDB9");

                    b.HasIndex("AccountId");

                    b.HasIndex("IdPaymentMethod");

                    b.HasIndex("IdStatus");

                    b.HasIndex(new[] { "IdWorkingSpace" }, "IX_Booking_id_working_space");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.BookingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__BookingS__3213E83FDAD5A503");

                    b.ToTable("BookingStatus", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("middle_name");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Client__3213E83FAFB5A7C0");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("WorkingHours")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("10:00-21:00")
                        .HasColumnName("working_hours");

                    b.HasKey("Id")
                        .HasName("PK__Club__3213E83FBE0BCDC2");

                    b.ToTable("Club", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.CostRevenue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("IdClub")
                        .HasColumnType("int")
                        .HasColumnName("id_club");

                    b.Property<bool?>("Revenue")
                        .HasColumnType("bit")
                        .HasColumnName("revenue");

                    b.HasKey("Id")
                        .HasName("PK__CostReve__3213E83F693444FD");

                    b.HasIndex("IdClub");

                    b.ToTable("CostRevenue", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date")
                        .HasColumnName("hire_date");

                    b.Property<int>("IdClub")
                        .HasColumnType("int")
                        .HasColumnName("id_club");

                    b.Property<int>("IdRole")
                        .HasColumnType("int")
                        .HasColumnName("id_role");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime")
                        .HasColumnName("last_login");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("login");

                    b.Property<string>("PassportData")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("passport_data");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("binary(64)")
                        .HasColumnName("password")
                        .IsFixedLength();

                    b.Property<DateTime?>("PasswordChangedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("password_changed_at");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money")
                        .HasColumnName("salary");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3213E83F27CF2024");

                    b.HasIndex(new[] { "IdClub" }, "IX_Employee_id_club");

                    b.HasIndex(new[] { "IdRole" }, "IX_Employee_id_role");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.EmployeeActionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action_type");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int")
                        .HasColumnName("id_employee");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3213E83F8B98D81C");

                    b.HasIndex(new[] { "IdEmployee" }, "IX_EmployeeActionLog_id_employee");

                    b.ToTable("EmployeeActionLog", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdClub")
                        .HasColumnType("int")
                        .HasColumnName("id_club");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("name");

                    b.Property<DateOnly?>("PurchaseDate")
                        .HasColumnType("date")
                        .HasColumnName("purchase_date");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("money")
                        .HasColumnName("purchase_price");

                    b.Property<int?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("quantity");

                    b.Property<string>("Specification")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("specification");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Equipmen__3213E83F7552EB31");

                    b.HasIndex(new[] { "IdClub" }, "IX_Equipment_id_club");

                    b.HasIndex(new[] { "Status" }, "IX_Equipment_status");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("CompClubAPI.Models.EquipmentMaintenance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Cost")
                        .HasColumnType("money")
                        .HasColumnName("cost");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int")
                        .HasColumnName("equipment_id");

                    b.Property<DateTime?>("MaintenanceDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("maintenance_date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Equipmen__3213E83FBFB6EB88");

                    b.HasIndex(new[] { "EquipmentId" }, "IX_EquipmentMaintenance_equipment_id");

                    b.ToTable("EquipmentMaintenance", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.EquipmentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Equipmen__3213E83F47EA80CB");

                    b.ToTable("EquipmentStatus", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdClub")
                        .HasColumnType("int")
                        .HasColumnName("id_club");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.HasKey("Id")
                        .HasName("PK__Feedback__3213E83FE11FE75C");

                    b.HasIndex("AccountId");

                    b.HasIndex(new[] { "IdClub" }, "IX_Feedback_id_club");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte[]>("EncryptedCardNumber")
                        .HasMaxLength(32)
                        .HasColumnType("varbinary(32)")
                        .HasColumnName("encrypted_card_number");

                    b.Property<byte[]>("EncryptedCvv")
                        .HasMaxLength(32)
                        .HasColumnType("varbinary(32)")
                        .HasColumnName("encrypted_CVV");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3213E83FCB0EC01C");

                    b.HasIndex("AccountId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__PaymentM__3213E83F3C8802FA");

                    b.ToTable("PaymentMethod", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Role__3213E83FAD08622B");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int")
                        .HasColumnName("id_employee");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Shift__3213E83F37EEADBA");

                    b.HasIndex(new[] { "IdEmployee" }, "IX_Shift_id_employee");

                    b.ToTable("Shift", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Statistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientNumber")
                        .HasColumnType("int")
                        .HasColumnName("client_number");

                    b.Property<decimal>("Finances")
                        .HasColumnType("money")
                        .HasColumnName("finances");

                    b.Property<int>("IdClub")
                        .HasColumnType("int")
                        .HasColumnName("id_club");

                    b.HasKey("Id")
                        .HasName("PK__Statisti__3213E83F70667EBB");

                    b.HasIndex("IdClub");

                    b.ToTable("Statistic", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Tariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<decimal>("PricePerMinute")
                        .HasColumnType("money")
                        .HasColumnName("pricePerMinute");

                    b.HasKey("Id")
                        .HasName("PK__Tariff__3213E83FFCBC004C");

                    b.ToTable("Tariff", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.WorkingSpace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdClub")
                        .HasColumnType("int")
                        .HasColumnName("id_club");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<int?>("TariffId")
                        .HasColumnType("int")
                        .HasColumnName("tariff_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__WorkingS__3213E83F500C02FE");

                    b.HasIndex("TariffId");

                    b.HasIndex(new[] { "IdClub" }, "IX_WorkingSpace_id_club");

                    b.ToTable("WorkingSpace", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.WorkingSpaceEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEquipment")
                        .HasColumnType("int")
                        .HasColumnName("id_equipment");

                    b.Property<int>("IdWorkingSpace")
                        .HasColumnType("int")
                        .HasColumnName("id_working_space");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__WorkingS__3213E83F2597700A");

                    b.HasIndex(new[] { "IdEquipment" }, "IX_WorkingSpaceEquipment_id_equipment");

                    b.HasIndex(new[] { "IdWorkingSpace" }, "IX_WorkingSpaceEquipment_id_working_space");

                    b.ToTable("WorkingSpaceEquipment", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Account", b =>
                {
                    b.HasOne("CompClubAPI.Models.Client", "IdClientNavigation")
                        .WithMany("Accounts")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK__Account__id_clie__3C69FB99");

                    b.Navigation("IdClientNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.BalanceHistory", b =>
                {
                    b.HasOne("CompClubAPI.Models.Account", "Account")
                        .WithMany("BalanceHistories")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__BalanceHi__accou__0F624AF8");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CompClubAPI.Models.Booking", b =>
                {
                    b.HasOne("CompClubAPI.Models.Account", "Account")
                        .WithMany("Bookings")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__account__160F4887");

                    b.HasOne("CompClubAPI.Models.PaymentMethod", "IdPaymentMethodNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("IdPaymentMethod")
                        .HasConstraintName("FK__Booking__id_paym__73BA3083");

                    b.HasOne("CompClubAPI.Models.BookingStatus", "IdStatusNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("IdStatus")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__id_stat__72C60C4A");

                    b.HasOne("CompClubAPI.Models.WorkingSpace", "IdWorkingSpaceNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("IdWorkingSpace")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__id_work__71D1E811");

                    b.Navigation("Account");

                    b.Navigation("IdPaymentMethodNavigation");

                    b.Navigation("IdStatusNavigation");

                    b.Navigation("IdWorkingSpaceNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.CostRevenue", b =>
                {
                    b.HasOne("CompClubAPI.Models.Club", "IdClubNavigation")
                        .WithMany("CostRevenues")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("FK__CostReven__id_cl__55009F39");

                    b.Navigation("IdClubNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.Employee", b =>
                {
                    b.HasOne("CompClubAPI.Models.Club", "IdClubNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("FK__Employee__id_clu__7D439ABD");

                    b.HasOne("CompClubAPI.Models.Role", "IdRoleNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK__Employee__id_rol__7C4F7684");

                    b.Navigation("IdClubNavigation");

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.EmployeeActionLog", b =>
                {
                    b.HasOne("CompClubAPI.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("EmployeeActionLogs")
                        .HasForeignKey("IdEmployee")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeA__id_em__02FC7413");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.Equipment", b =>
                {
                    b.HasOne("CompClubAPI.Models.Club", "IdClubNavigation")
                        .WithMany("Equipment")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("FK__Equipment__id_cl__5CD6CB2B");

                    b.HasOne("CompClubAPI.Models.EquipmentStatus", "StatusNavigation")
                        .WithMany("Equipment")
                        .HasForeignKey("Status")
                        .IsRequired()
                        .HasConstraintName("FK__Equipment__statu__5DCAEF64");

                    b.Navigation("IdClubNavigation");

                    b.Navigation("StatusNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.EquipmentMaintenance", b =>
                {
                    b.HasOne("CompClubAPI.Models.Equipment", "Equipment")
                        .WithMany("EquipmentMaintenances")
                        .HasForeignKey("EquipmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Equipment__equip__6A30C649");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("CompClubAPI.Models.Feedback", b =>
                {
                    b.HasOne("CompClubAPI.Models.Account", "Account")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__Feedback__accoun__17036CC0");

                    b.HasOne("CompClubAPI.Models.Club", "IdClubNavigation")
                        .WithMany("Feedbacks")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("FK__Feedback__id_clu__0B91BA14");

                    b.Navigation("Account");

                    b.Navigation("IdClubNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.Payment", b =>
                {
                    b.HasOne("CompClubAPI.Models.Account", "Account")
                        .WithMany("Payments")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__account__1332DBDC");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CompClubAPI.Models.Shift", b =>
                {
                    b.HasOne("CompClubAPI.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("Shifts")
                        .HasForeignKey("IdEmployee")
                        .IsRequired()
                        .HasConstraintName("FK__Shift__id_employ__06CD04F7");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.Statistic", b =>
                {
                    b.HasOne("CompClubAPI.Models.Club", "IdClubNavigation")
                        .WithMany("Statistics")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("FK__Statistic__id_cl__57DD0BE4");

                    b.Navigation("IdClubNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.WorkingSpace", b =>
                {
                    b.HasOne("CompClubAPI.Models.Club", "IdClubNavigation")
                        .WithMany("WorkingSpaces")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("FK__WorkingSp__id_cl__5535A963");

                    b.HasOne("CompClubAPI.Models.Tariff", "Tariff")
                        .WithMany("WorkingSpaces")
                        .HasForeignKey("TariffId")
                        .HasConstraintName("FK__WorkingSp__tarif__3A4CA8FD");

                    b.Navigation("IdClubNavigation");

                    b.Navigation("Tariff");
                });

            modelBuilder.Entity("CompClubAPI.Models.WorkingSpaceEquipment", b =>
                {
                    b.HasOne("CompClubAPI.Models.Equipment", "IdEquipmentNavigation")
                        .WithMany("WorkingSpaceEquipments")
                        .HasForeignKey("IdEquipment")
                        .IsRequired()
                        .HasConstraintName("FK__WorkingSp__id_eq__656C112C");

                    b.HasOne("CompClubAPI.Models.WorkingSpace", "IdWorkingSpaceNavigation")
                        .WithMany("WorkingSpaceEquipments")
                        .HasForeignKey("IdWorkingSpace")
                        .IsRequired()
                        .HasConstraintName("FK__WorkingSp__id_wo__6477ECF3");

                    b.Navigation("IdEquipmentNavigation");

                    b.Navigation("IdWorkingSpaceNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.Account", b =>
                {
                    b.Navigation("BalanceHistories");

                    b.Navigation("Bookings");

                    b.Navigation("Feedbacks");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("CompClubAPI.Models.BookingStatus", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("CompClubAPI.Models.Client", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("CompClubAPI.Models.Club", b =>
                {
                    b.Navigation("CostRevenues");

                    b.Navigation("Employees");

                    b.Navigation("Equipment");

                    b.Navigation("Feedbacks");

                    b.Navigation("Statistics");

                    b.Navigation("WorkingSpaces");
                });

            modelBuilder.Entity("CompClubAPI.Models.Employee", b =>
                {
                    b.Navigation("EmployeeActionLogs");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("CompClubAPI.Models.Equipment", b =>
                {
                    b.Navigation("EquipmentMaintenances");

                    b.Navigation("WorkingSpaceEquipments");
                });

            modelBuilder.Entity("CompClubAPI.Models.EquipmentStatus", b =>
                {
                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("CompClubAPI.Models.PaymentMethod", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("CompClubAPI.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CompClubAPI.Models.Tariff", b =>
                {
                    b.Navigation("WorkingSpaces");
                });

            modelBuilder.Entity("CompClubAPI.Models.WorkingSpace", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("WorkingSpaceEquipments");
                });
#pragma warning restore 612, 618
        }
    }
}
