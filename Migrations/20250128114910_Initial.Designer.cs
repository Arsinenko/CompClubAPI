// <auto-generated />
using System;
using CompClubAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompClubAPI.Migrations
{
    [DbContext(typeof(CollegeTaskContext))]
    [Migration("20250128114910_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompClubAPI.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Balance")
                        .HasColumnType("money")
                        .HasColumnName("balance");

                    b.Property<int>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("id_client");

                    b.HasKey("Id")
                        .HasName("PK__Account__3213E83F277E432D");

                    b.HasIndex("IdClient");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time");

                    b.Property<int>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("id_client");

                    b.Property<int>("IdWorkingSpace")
                        .HasColumnType("int")
                        .HasColumnName("id_working_space");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payment_method");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("money")
                        .HasColumnName("total_cost");

                    b.HasKey("Id")
                        .HasName("PK__Booking__3213E83FC1B1285F");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdWorkingSpace");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("login");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("middle_name");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("binary(32)")
                        .HasColumnName("password")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("PK__Client__3213E83F30D0479D");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("_name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone");

                    b.Property<string>("WorkingHours")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("10:00-21:00")
                        .HasColumnName("working_hours");

                    b.HasKey("Id")
                        .HasName("PK__Club__3213E83F32C10B1A");

                    b.ToTable("Club", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date")
                        .HasColumnName("hire_date");

                    b.Property<int>("IdClub")
                        .HasColumnType("int")
                        .HasColumnName("id_club");

                    b.Property<int>("IdRole")
                        .HasColumnType("int")
                        .HasColumnName("id_role");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("login");

                    b.Property<string>("PassportData")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("passport_data");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("binary(64)")
                        .HasColumnName("password")
                        .IsFixedLength();

                    b.Property<decimal>("Salary")
                        .HasColumnType("money")
                        .HasColumnName("salary");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3213E83F5C09894B");

                    b.HasIndex("IdClub");

                    b.HasIndex("IdRole");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdClub")
                        .HasColumnType("int")
                        .HasColumnName("id_club");

                    b.Property<int?>("IdWorkingSpace")
                        .HasColumnType("int")
                        .HasColumnName("idWorkingSpace");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("_name");

                    b.Property<DateOnly?>("PurchaseDate")
                        .HasColumnType("date")
                        .HasColumnName("purchase_date");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("money")
                        .HasColumnName("purchase_price");

                    b.Property<int?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("quantity");

                    b.Property<string>("Specification")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("specification");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PK__Equipmen__3213E83F38C4C1B9");

                    b.HasIndex("IdClub");

                    b.HasIndex("IdWorkingSpace");

                    b.HasIndex("Status");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("CompClubAPI.Models.EquipmentMaintenance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Cost")
                        .HasColumnType("money")
                        .HasColumnName("cost");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int")
                        .HasColumnName("equipment_id");

                    b.Property<DateTime?>("MaintenanceDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("maintenance_date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Equipmen__3213E83FC092CE87");

                    b.HasIndex("EquipmentId");

                    b.ToTable("EquipmentMaintenance", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.EquipmentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("_name");

                    b.HasKey("Id")
                        .HasName("PK__Equipmen__3213E83F2E2D25B6");

                    b.ToTable("EquipmentStatus", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("FeedbackDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("feedback_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("id_client");

                    b.Property<int>("IdClub")
                        .HasColumnType("int")
                        .HasColumnName("id_club");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.HasKey("Id")
                        .HasName("PK__Feedback__3213E83FB7E3D431");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdClub");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdLauncher")
                        .HasColumnType("int")
                        .HasColumnName("id_launcher");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("_name");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("PK__Game__3213E83F3A6D7B6C");

                    b.HasIndex("IdLauncher");

                    b.ToTable("Game", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.GameLauncher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("_name");

                    b.HasKey("Id")
                        .HasName("PK__GameLaun__3213E83F9241E2D4");

                    b.ToTable("GameLauncher", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<byte[]>("EncryptedCardNumber")
                        .HasMaxLength(32)
                        .HasColumnType("varbinary(32)")
                        .HasColumnName("encrypted_card_number");

                    b.Property<byte[]>("EncryptedCvv")
                        .HasMaxLength(32)
                        .HasColumnType("varbinary(32)")
                        .HasColumnName("encrypted_CVV");

                    b.Property<DateOnly?>("LinkDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("link_date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("Payment_pk");

                    b.HasIndex("ClientId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("_name");

                    b.HasKey("Id")
                        .HasName("PK__Role__3213E83FB39E85B7");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int")
                        .HasColumnName("id_employee");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time");

                    b.HasKey("Id")
                        .HasName("PK__Shift__3213E83FD85ED888");

                    b.HasIndex("IdEmployee");

                    b.ToTable("Shift", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.UserActionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action");

                    b.Property<DateTime?>("ActionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("action_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("PK__UserActi__3213E83FB68F2708");

                    b.HasIndex("ClientId");

                    b.ToTable("UserActionLog", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.WorkingSpace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__WorkingS__3213E83FD78B3B9E");

                    b.ToTable("WorkingSpace", (string)null);
                });

            modelBuilder.Entity("CompClubAPI.Models.Account", b =>
                {
                    b.HasOne("CompClubAPI.Models.Client", "IdClientNavigation")
                        .WithMany("Accounts")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK__Account__id_clie__2B0A656D");

                    b.Navigation("IdClientNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.Booking", b =>
                {
                    b.HasOne("CompClubAPI.Models.Client", "IdClientNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__id_clie__59C55456");

                    b.HasOne("CompClubAPI.Models.WorkingSpace", "IdWorkingSpaceNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("IdWorkingSpace")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__id_work__5AB9788F");

                    b.Navigation("IdClientNavigation");

                    b.Navigation("IdWorkingSpaceNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.Employee", b =>
                {
                    b.HasOne("CompClubAPI.Models.Club", "IdClubNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("FK__Employee__id_clu__5F7E2DAC");

                    b.HasOne("CompClubAPI.Models.Role", "IdRoleNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK__Employee__id_rol__3A4CA8FD");

                    b.Navigation("IdClubNavigation");

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.Equipment", b =>
                {
                    b.HasOne("CompClubAPI.Models.Club", "IdClubNavigation")
                        .WithMany("Equipment")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("FK__Equipment__id_cl__40F9A68C");

                    b.HasOne("CompClubAPI.Models.WorkingSpace", "IdWorkingSpaceNavigation")
                        .WithMany("Equipment")
                        .HasForeignKey("IdWorkingSpace")
                        .HasConstraintName("FK__Equipment__idWor__73852659");

                    b.HasOne("CompClubAPI.Models.EquipmentStatus", "StatusNavigation")
                        .WithMany("Equipment")
                        .HasForeignKey("Status")
                        .IsRequired()
                        .HasConstraintName("FK__Equipment__statu__41EDCAC5");

                    b.Navigation("IdClubNavigation");

                    b.Navigation("IdWorkingSpaceNavigation");

                    b.Navigation("StatusNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.EquipmentMaintenance", b =>
                {
                    b.HasOne("CompClubAPI.Models.Equipment", "Equipment")
                        .WithMany("EquipmentMaintenances")
                        .HasForeignKey("EquipmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Equipment__equip__45BE5BA9");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("CompClubAPI.Models.Feedback", b =>
                {
                    b.HasOne("CompClubAPI.Models.Client", "IdClientNavigation")
                        .WithMany("Feedbacks")
                        .HasForeignKey("IdClient")
                        .HasConstraintName("FK__Feedback__id_cli__4A8310C6");

                    b.HasOne("CompClubAPI.Models.Club", "IdClubNavigation")
                        .WithMany("Feedbacks")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("FK__Feedback__id_clu__498EEC8D");

                    b.Navigation("IdClientNavigation");

                    b.Navigation("IdClubNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.Game", b =>
                {
                    b.HasOne("CompClubAPI.Models.GameLauncher", "IdLauncherNavigation")
                        .WithMany("Games")
                        .HasForeignKey("IdLauncher")
                        .HasConstraintName("FK__Game__id_launche__31B762FC");

                    b.Navigation("IdLauncherNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.Payment", b =>
                {
                    b.HasOne("CompClubAPI.Models.Client", "Client")
                        .WithMany("Payments")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__client___3587F3E0");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CompClubAPI.Models.Shift", b =>
                {
                    b.HasOne("CompClubAPI.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("Shifts")
                        .HasForeignKey("IdEmployee")
                        .IsRequired()
                        .HasConstraintName("FK__Shift__id_employ__4F47C5E3");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("CompClubAPI.Models.UserActionLog", b =>
                {
                    b.HasOne("CompClubAPI.Models.Client", "Client")
                        .WithMany("UserActionLogs")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__UserActio__clien__5224328E");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CompClubAPI.Models.Client", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Bookings");

                    b.Navigation("Feedbacks");

                    b.Navigation("Payments");

                    b.Navigation("UserActionLogs");
                });

            modelBuilder.Entity("CompClubAPI.Models.Club", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Equipment");

                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("CompClubAPI.Models.Employee", b =>
                {
                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("CompClubAPI.Models.Equipment", b =>
                {
                    b.Navigation("EquipmentMaintenances");
                });

            modelBuilder.Entity("CompClubAPI.Models.EquipmentStatus", b =>
                {
                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("CompClubAPI.Models.GameLauncher", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("CompClubAPI.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CompClubAPI.Models.WorkingSpace", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Equipment");
                });
#pragma warning restore 612, 618
        }
    }
}
